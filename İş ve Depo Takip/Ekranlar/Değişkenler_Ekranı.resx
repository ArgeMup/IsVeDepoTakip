<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="İpUcu_Genel.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="TabloİçeriğiArama.ToolTip" xml:space="preserve">
    <value>Bir değişken ad ve içerikten oluşur. (Kuralları panoya kopyalamak için çift tıklayınız)
	Değişkeni silmek için adını silip kaydet tuşuna basınız.
	Ad; formül içerisinde % karakterleri arasında bulunmalıdır.
		Değişkenin adı : döviz kuru ise
		%döviz kuru% biçiminde formül içerisinde kullanılabilir.
	Aynı ad ikinci kez kullanılmamalıdır. (Son eleman kabul edilir.)
	İçeriğe not yazmak için # karakteri kullanılabilir.
		Örneğin : %döviz kuru% + 1,5 #Günlük kura tölerans ekle
	İçerik sayılar, parantez () ve diğer değişkenlerin adlarından oluşabilir.
		Sayılar : 3 + 5
		İşlem sırası : ( 3 + 5 ) + 7
		Diğer değişkenlerle birlikte kullanım : %sayı1% + %sayı2%
	İşlem sonucunun 0 dan büyük olması şarttır.
		Tersi duruma izin vermek için %&lt;=0% eklenir
		%döviz kuru% %&lt;=0% #Döviz kuru okunamaz ise ücreti 0 olarak hesaplar
	İşlem sonucunu yuvarlamak için özel komut eklenir. (yukarıya yuvarlar)
		%Yuvarla&lt;boşluk&gt;&lt;basamak sayısı&gt;%
			Adı -&gt; sayı1 -&gt; 1234
			Adı -&gt; sayı2 -&gt; 0,5678
			formül : %sayı1% + %sayı2% 		-&gt; 1234,5678
			formül : %sayı1% + %sayı2% %Yuvarla 2% 	-&gt; 1300
			formül : %sayı1% + %sayı2% %Yuvarla 1% 	-&gt; 1240
			formül : %sayı1% + %sayı2% %Yuvarla 0% 	-&gt; 1234
			formül : %sayı1% + %sayı2% %Yuvarla -1% 	-&gt; 1234,6
			formül : %sayı1% + %sayı2% %Yuvarla -2% 	-&gt; 1234,57
	Birden fazla sayının en büyük yada en küçüğünü bulmak için özel komut eklenir.
		Değişkenlerden oluşmayan girdiler boşluksuz doğrudan yazılır
			1 yada 3+5 yada (3*5)/7 gibi
		Bir değişken kullanılacak ise %% karakterleri olmamalıdır
			Değişken adı : %sayı1% ise sayı1 olarak yazılmalı
		%EnBüyük&lt;boşluk&gt;&lt;Eleman1&gt;&lt;boşluk&gt;&lt;Eleman2&gt;...%
			Adı -&gt; sayı1 -&gt; 1
			Adı -&gt; sayı2 -&gt; 2
			formül : %EnBüyük sayı1 5+5+5 sayı2%	-&gt; 15
			formül : %EnKüçük sayı1 5 sayı2%		-&gt; 1
	Bir kuşulu sınamak için özel komut eklenir. (İşlem sonucu &gt;0 ise doğrudur)  
		Değişkenlerden oluşmayan girdiler boşluksuz doğrudan yazılır
			1 yada 3+5 yada (3*5)/7 gibi
		Bir değişken kullanılacak ise %% karakterleri olmamalıdır
			Değişken adı : %sayı1% ise sayı1 olarak yazılmalı
		%Koşul&lt;boşluk&gt;&lt;Doğru&gt;&lt;boşluk&gt;&lt;Yanlış&gt;%
			Adı -&gt; sayı1 -&gt; 1
			Adı -&gt; sayı2 -&gt; 2
			formül : %Koşul 1&gt;2 5+5+5 sayı2%		-&gt; 2
			formül : %Koşul sayı1 5 sayı2%		-&gt; 5</value>
  </data>
  <metadata name="Tablo_Adı.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Tablo_İçeriği.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Tablo_Değeri.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>